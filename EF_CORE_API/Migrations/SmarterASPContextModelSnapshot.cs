// <auto-generated />
using System;
using EF_CORE_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_CORE_API.Migrations
{
    [DbContext(typeof(SmarterASPContext))]
    partial class SmarterASPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_CORE_API.Models.CustomersAdresses", b =>
                {
                    b.Property<string>("CustomerNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BuildingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerNo");

                    b.ToTable("CustomersAdresses");
                });

            modelBuilder.Entity("EF_CORE_API.Models.CustomersListH", b =>
                {
                    b.Property<string>("CustomerNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BuildingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesMan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerNo");

                    b.ToTable("CustomersListH");
                });

            modelBuilder.Entity("EF_CORE_API.Models.ItemsList", b =>
                {
                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorItemNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemNo");

                    b.ToTable("ItemsList");
                });

            modelBuilder.Entity("EF_CORE_API.Models.SalesOrderHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DocumentNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DynStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrintOpt")
                        .HasColumnType("int");

                    b.Property<string>("SalesMan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("SalesOrderHead");
                });

            modelBuilder.Entity("EF_CORE_API.Models.SalesOrderLinesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExtendedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemNumber");

                    b.HasIndex("SoHeadId");

                    b.ToTable("SalesOrderLinesItem");
                });

            modelBuilder.Entity("EF_CORE_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EF_CORE_API.Models.CustomersAdresses", b =>
                {
                    b.HasOne("EF_CORE_API.Models.CustomersListH", "Customer")
                        .WithOne("Adress")
                        .HasForeignKey("EF_CORE_API.Models.CustomersAdresses", "CustomerNo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EF_CORE_API.Models.SalesOrderHead", b =>
                {
                    b.HasOne("EF_CORE_API.Models.CustomersListH", "Customer")
                        .WithMany("SalesOrderHeads")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EF_CORE_API.Models.SalesOrderLinesItem", b =>
                {
                    b.HasOne("EF_CORE_API.Models.ItemsList", "ItemNumberNavigation")
                        .WithMany("SalesOrderLinesItems")
                        .HasForeignKey("ItemNumber")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EF_CORE_API.Models.SalesOrderHead", "SoHead")
                        .WithMany("SalesOrderLinesItems")
                        .HasForeignKey("SoHeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ItemNumberNavigation");

                    b.Navigation("SoHead");
                });

            modelBuilder.Entity("EF_CORE_API.Models.CustomersListH", b =>
                {
                    b.Navigation("Adress");

                    b.Navigation("SalesOrderHeads");
                });

            modelBuilder.Entity("EF_CORE_API.Models.ItemsList", b =>
                {
                    b.Navigation("SalesOrderLinesItems");
                });

            modelBuilder.Entity("EF_CORE_API.Models.SalesOrderHead", b =>
                {
                    b.Navigation("SalesOrderLinesItems");
                });
#pragma warning restore 612, 618
        }
    }
}
